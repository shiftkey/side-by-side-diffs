

diff --git a/Octokit/Http/Connection.cs b/Octokit/Http/Connection.cs
index 8ecee5c..958edba 100644
--- a/Octokit/Http/Connection.cs
+++ b/Octokit/Http/Connection.cs
@@ -247,24 +247,7 @@ public Task<IResponse<T>> Put<T>(Uri uri, object body, string twoFactorAuthentic
                 Timeout = timeout
             };
 
-            if (!String.IsNullOrEmpty(accepts))
-            {
-                request.Headers["Accept"] = accepts;
-            }
-
-            if (!String.IsNullOrEmpty(twoFactorAuthenticationCode))
-            {
-                request.Headers["X-GitHub-OTP"] = twoFactorAuthenticationCode;
-            }
-
-            if (body != null)
-            {
-                request.Body = body;
-                // Default Content Type per: http://developer.github.com/v3/
-                request.ContentType = contentType ?? "application/x-www-form-urlencoded";
-            }
-
-            return Run<T>(request, cancellationToken);
+            return SendDataInternal<T>(body, accepts, contentType, cancellationToken, twoFactorAuthenticationCode, request);
         }
 
         Task<IResponse<T>> SendData<T>(
@@ -286,6 +269,11 @@ public Task<IResponse<T>> Put<T>(Uri uri, object body, string twoFactorAuthentic
                 Endpoint = uri,
             };
 
+            return SendDataInternal<T>(body, accepts, contentType, cancellationToken, twoFactorAuthenticationCode, request);
+        }
+
+        Task SendDataInternal<T>(object body, string accepts, string contentType, CancellationToken cancellationToken, string twoFactorAuthenticationCode, Request request)
+        {
             if (!String.IsNullOrEmpty(accepts))
             {
                 request.Headers["Accept"] = accepts;
@@ -303,7 +291,7 @@ public Task<IResponse<T>> Put<T>(Uri uri, object body, string twoFactorAuthentic
                 request.ContentType = contentType ?? "application/x-www-form-urlencoded";
             }
 
-            return Run<T>(request,cancellationToken);
+            return Run<T>(request, cancellationToken);
         }
 
         /// <summary>
